# ======================================================================================
#  __    ____  __  __  ____  ___
# (  )  (_  _)(  \/  )( ___)/ __)
#  )(__  _)(_  )    (  )__) \__ \
# (____)(____)(_/\/\_)(____)(___/
#
#  This file is part of the Limes open source library and is licensed under the terms of the GNU Public License.
#
#  Commercial licenses are available; contact the maintainers at ben.the.vining@gmail.com to inquire for details.
#
# ======================================================================================

# export default settings for CMake
# see CMake's environment variables documentation: https://cmake.org/cmake/help/latest/manual/cmake-env-variables.7.html

if has ninja; then
	export CMAKE_GENERATOR="Ninja Multi-Config"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
	export CMAKE_GENERATOR="Unix Makefiles"
else
	export CMAKE_GENERATOR=Xcode
fi

export CMAKE_CONFIG_TYPE=Debug

export CMAKE_COLOR_DIAGNOSTICS=ON

export CMAKE_EXPORT_COMPILE_COMMANDS=ON

export CTEST_OUTPUT_ON_FAILURE=ON
export CTEST_PROGRESS_OUTPUT=ON
export CTEST_NO_TESTS_ACTION=error

if has nproc; then
	NUM_PROCS=$(nproc --all)
elif has getconf; then
	NUM_PROCS=$(getconf _NPROCESSORS_ONLN)
else
	NUM_PROCS=$([ $(uname) = 'Darwin' ] &&
				sysctl -n hw.logicalcpu_max ||
				lscpu -p | egrep -v '^#' | wc -l
				)
fi

export CMAKE_BUILD_PARALLEL_LEVEL="$NUM_PROCS"
export CTEST_PARALLEL_LEVEL="$NUM_PROCS"

if [[ $(uname -p) == 'arm' ]]; then
	export CMAKE_APPLE_SILICON_PROCESSOR=arm64
else
	export CMAKE_APPLE_SILICON_PROCESSOR=x86_64
fi

export CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
export MACOSX_DEPLOYMENT_TARGET="11.0"

export VERBOSE=ON

# default to GCC (direnv doesn't support Windows, so gcc should work everywhere direnv is used)
export CC="gcc"
export CXX="g++"
export FC="gfortran"

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
